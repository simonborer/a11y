---
title: The Seventh week
layout: default
hasSlides: true
today:
  assorted:
    - Attendance
    - OCAS is coming
  theory:
    - WAI-ARIA
    - Accessibility in JS Frameworks
    - Analyzing test results
---
<% const part = '../../../partials/'; %>
<% const basePath = site.basePath %>
<%- include(`${part}today`) %>
<%- include(`${part}section`, {
  id: false,
  style: "slide-only",
  headline: 'Attendance',
  body: `Please <a href="http://etc.ch/Kpep" target='_blank'>mark your attendance down</a>.`,
  list: false
}) %>

<%- include(`${part}section`, {
  id: false,
  style: "slide-only",
  headline: 'OCAS',
  body: [`Tudor Whiteley will be coming in at noon today to meet you and address any questions you have in regards to the desktop+mouse testing.`],
  list: false
}) %>

<%- include(`${part}section`, {
  id: false,
  style: false,
  headline: 'WAI-ARIA deep dive',
  body: ["As we covered earlier, WAI-ARIA, a.k.a. ARIA, is a specification from the W3C that uses element attributes to supplement existing semantics <ol><li>to provide more information about your markup, and</li><li>provide information about content that updates without a page refresh.</li>", "This is especially relevant when you are using a front-end javascript framework (Angular, React, Vue, et al.)."],
  list: false
}) %>


<%- include(`${part}section`, {
  id: false,
  style: false,
  headline: false,
  body: ["Remember that the spec tells us that we should use native semantics when they are available.", "If it's a button, use a <button>."],
  list: false
}) %>

<%- include(`${part}section`, {
  id: false,
  style: false,
  headline: 'ARIA roles',
  body: ["The role attribute provides information about an element's purpose.", "The role attribute identifies the element to the screenreader, but it <em>does not</em> recreate the native functionality. That's on you."],
  list: false
}) %>

<%- include(`${part}section`, {
  id: false,
  style: false,
  headline: 'role="button"',
  body: ["Let's say, for whatever reason, you need to make a button out of something that's not <button>, <input type='button' />,  <input type='submit' />, <input type='reset' /> or <input type='image' />.", "`role='button'` identifies any element as a button to a screenreader. Use this in conjunction with `tabindex='0'` - the role itself does not make the element focusable.", "Remember, too, that a native HTML button will fire an onclick event when space or enter are pressed - so you're also responsible for recreating that native functionality."],
  list: false
}) %>


<%- include(`${part}section`, {
  id: false,
  style: false,
  headline: 'More roles! - widgets',
  body: ["checkbox", "dialog (this can be a modal, or not)", "link", "log (i.e. a chat log)", "marquee (like a log, but not vital or linear, i.e. a carousel or stock ticker)", "progressbar", "radio", "scrollbar", "slider (i.e. a range slider or volume control)", "spinbutton (a value selection input with up and down arrows)", "status (a status update message, i.e. `your changes have been saved`", "tablist > tab + tabpanel", "grid > row > rowheader + cell + columnheader", "menubar > menu > menuitem + menuitemcheckbox", "textbox", "timer", "tooltip", "tree/treegrid > treeitem", "switch (identical to checkbox, but strictly for values of on or off", "listbox > option", "radiogroup > radio" ],
  list: false
}) %>

<%- include(`${part}section`, {
  id: false,
  style: false,
  headline: 'Even more roles! - document structure',
  body: ["article", "definition", "directory (i.e. table of contents)", "document", "group (of UI elements not in a perceivable page section)", "heading", "img (useful in case of background images)", "list > listitem", "math (there is an entire markup language for mathy stuff! it's called <a href='https://www.w3.org/Math/whatIsMathML.html' target='_blank'>MathML</a> and can be called into other markup, like HTML)", "note", "presentation - similar in function to aria-hidden; this tells the screenreader that the element is decorative, but <a href='http://john.foliot.ca/aria-hidden/' target='_blank'>support for it on natively focusable elements is interesting</a>.", "region", "separator", "toolbar"],
  list: false
}) %>

<%- include(`${part}section`, {
  id: false,
  style: false,
  headline: 'And finally... more roles! - landmarks',
  body: ["application - for when your HTML document behaves completely different from a standard html document; probably don't use this. It turns off all standard keyboard shortcuts in most screenreaders.", "banner - analogous to <header>", "complementary - like <aside>", "contentinfo - like <footer>", "form", "main", "navigation", "search"],
  list: false
}) %>

<%- include(`${part}section`, {
  id: false,
  style: false,
  headline: "Widget attributes",
  body: [`role="combobox|textbox" aria-autocomplete="none|inline|list|both"`, `role="checkbox|switch|..." aria-checked="true|false|mixed"`, `aria-current="page|step|date|location|time|true|false"`, `aria-disabled="true|false"`, `aria-expanded="true|false"`, `aria-haspopup="true|false|menu|listbox|tree|grid|dialog"`, `aria-hidden="true|false|undefined"`, `aria-invalid="true|false|grammar|spelling"`, `aria-label={string} only for invisible text`, `role="grid|heading|listitem|row|tablist" aria-level={integer}`, `role="textbox" aria-multiline="true|false"`, `role="grid|listbox|tablist|tree" aria-multiselectable="true|false"`, `role="scrollbar|select|separator|slider|tablist|toolbar" aria-orientation="horizontal|vertical|undefined"`, `role="button" aria-pressed="true|false|mixed"`, `role=checkbox|combobox|grid|gridcell|listbox|radiogroup|slider|spinbutton|textbox" aria-readonly="true|false"`, `role="combobox|gridcell|listbox|radiogroup|spinbutton|textbox|tree" aria-required="true|false"`, `role="gridcell|option|row|tab" aria-selected="true|false|undefined"`, `role="columnheader|rowheader" aria-sort="ascending|descending|none|other"`, `role="range|scrollbar|separator|slider|spinbutton" aria-valuemax={number} aria-valuemin={number} aria-valuenow={number}`, `role="range|separator" aria-valuetext={string}`],
  list: false
}) %>

<%- include(`${part}section`, {
  id: false,
  style: false,
  headline: "Live region attributes",
  body: [`aria-live="polite|assertive|off"`, `aria-live="polite" aria-atomic="true|false"`, `aria-live="polite" aria-relevant="additions|text|removals|all"`, `aria-live="assertive" aria-busy="true|false"`],
  list: false
}) %>

<%- include(`${part}section`, {
  id: false,
  style: false,
  headline: "Implicit live region attributes",
  body: [`Several roles have implicit live region values:`, `role="alert" has an implicit aria-live="assertive"`, `role="status" and role="log" have an implicit aria-live="polite"`, `role="timer" and role="marquee" have an implicit aria-live="off"`, `These can be overridden by explicitly declaring aria-live values.`],
  list: false
}) %>

<%- include(`${part}section`, {
  id: false,
  style: false,
  headline: "Relationship attributes",
  body: [`role="application|composite|group|textbox" aria-activedescendant={id}`, `aria-controls={id}`, `aria-describedby={id} similar to aria-labelledby, but verbose instead of concise`, `aria-labelledby={id}`, `aria-flowto={id} gives the user the option to move to an element, overriding the source order`, `aria-owns={id} Defines a parent-child relationship when one isn't semantically apparent. To understand how this is different from aria-controls, imagine a carousel. The arrows on the left and right would have aria-controls attributes. The dots at the bottom that correlate to individual slides would have aria-owns attributes.`, `role="article|listitem|menuitem|option|radio|tab" aria-setsize={integer} aria-posinset={integer} Only required when not all elements from the set are included in the DOM.`],
  list: false
}) %>

<%- include(`${part}section`, {
  id: false,
  style: "slide-only",
  headline: '11:30',
  list: false,
  body: ["At 11:30 today we'll be helping to test the usability of the Humber Career Outlooks web app. Approach it as a participant, but while you're taking part, reflect on their methodology. We'll get to talk about what we thought about <em>their</em> testing in the lab. Would you have taken the same approach? Does this change how you'll interact with your test participants?"]
}) %>
<%- include(`${part}section`, {
  id: false,
  style: "slide-only",
  headline: 'Unpaid internships',
  list: false,
  body: ["https://www.labour.gov.on.ca/english/es/pubs/internships.php", "<blockquote><p>The Ministry of Labour is committed to ensuring fairness and protecting young workers. The fact that you are called an “intern” does not determine whether or not you are entitled to the protections of the Employment Standards Act, 2000 (ESA), including the minimum wage.</p><p>...The ESA does not apply to an individual who performs work <strong>under a program</strong> approved by a college of applied arts and technology or a university.</p><p>...If someone performing work as an unpaid intern is unsure of whether he or she is excluded from the ESA, he or she should call the Employment Standards Information Centre toll-free at 1-800-531-5551 for further information.</p>"]
}) %>
<%- include(`${part}section`, {
  id: false,
  style: "slide-only",
  headline: 'Reading without peeking',
  list: false,
  body: "How was it using a screenreader?"
}) %>
<%- include(`${part}section`, {
  id: false,
  style: "slide-only",
  headline: 'Where are you at?',
  list: false,
  body: ["How do you feel about the testing so far?", "Are you confident that you'll be able to draw meaningful conclusions about the data?", "Did anything surprise you?", "What would you like to change going forward?", "What's difficult?", "What's easy?", "What's fun?", "What's not?"]
}) %>
<%- include(`${part}section`, {
  id: false,
  style: false,
  headline: 'Differentiating UAT & Usability testing',
  list: false,
  body: ["UAT and usability testing are both kinds of testing. As are regression testing, unit testing and integration testing. Tests have plans, requirements and scenarios."]
}) %>
<%- include(`${part}section`, {
  id: false,
  style: false,
  headline: false,
  list: false,
  body: ["<table><thead><tr><td>Usability</td><td>UAT</td></tr></thead><tbody><tr><td>Meant to determine whether users can learn, understand and use the product efficiently to achieve theirgoals.</td><td>Meant to determine whether the client is satisfied that the product meets their requirements.</td></tr><tr><td>Can happen before or during development, before or after launch.</td><td>Happens after development, but before launch.</td></tr> <tr><td>Tests whether users can achieve the result they want.</td><td>Tests whether the product produces the expected result.</td></tr> <tr><td>Meant to generate continuous improvements.</td><td>Meant to achieve final sign-off.</td></tr> <tr><td>Run by the software team.</td><td>Run by the client.</td></tr></tbody></table>"]
}) %>
<%- include(`${part}section`, {
  id: false,
  style: "slide-only",
  headline: 'OH NO POP QUIZ',
  list: false,
  body: ["Please go to <a href='http://etc.ch/Yfga' target='_blank'>the quiz</a>"]
}) %>
<%- include(`${part}section`, {
  id: false,
  style: false,
  headline: 'Mobile accessibility',
  list: false,
  body: ["The WCAG has <a href='https://www.w3.org/TR/IMPLEMENTING-UAAG20/mobile' target='_blank'>multiple documents</a> on <a href='https://www.w3.org/TR/mobile-accessibility-mapping/'>how accessibility standards translate to mobile</a>.", "It's mostly along the lines of 'don't try to cram your whole desktop site onto mobile', and 'just make sure that you're doing what you do on desktop', but with a few extra cautions."]
}) %>
<%- include(`${part}section`, {
  id: false,
  style: false,
  headline: false,
  list: ["Take special pains to test resizing up to 200%.", "You definitely still have to have keyboard-only controls", "Touch targets are at least 9mm x 9mm, with adequate space between them (without magnification)", "Use mouseup or touchend events so that users can change their minds"],
  body: false
}) %>
<%- include(`${part}section`, {
  id: false,
  style: false,
  headline: false,
  list: ["Gestures should be kept simple, and have alternatives", "Support either orientation", "Put important elements above the fold", "Provide easily discoverable instructions", "Set the keyboard to the type of data entry required", "No scrolljacking", "Show focus"],
  body: false
}) %>
<%- include(`${part}section`, {
  id: false,
  style: false,
  headline: "Accessible content - page titles",
  list: false,
  body: ["Page title should be unique and descriptive. If it's page 2 of 3, say so."]
}) %>
<%- include(`${part}section`, {
  id: false,
  style: false,
  headline: "Accessible content - headings",
  list: false,
  body: ["Headings should structure your document. Think of the way your information is structured - it's very rarely appropriate to have just an h1 and then p tags all the way down. Headings should provide meaning and context."]
}) %>
<%- include(`${part}section`, {
  id: false,
  style: false,
  headline: "Accessible content - alt text",
  list: false,
  body: "Alternative text should be your best effort to convey <em>all</em> of the relevant information in the image - no more, no less. This gets tricky when you get into things like graphs. Think of how WebAIM approached it in our reading this week."
}) %>
<%- include(`${part}section`, {
  id: false,
  style: false,
  headline: "Accessible content - transcripts and captions",
  list: false,
  body: "Audio and video need transcriptions and/or captions. Keep an ear out for sounds that convey relevant information, and make sure they're included - not just the words."
}) %>
<%- include(`${part}section`, {
  id: false,
  style: false,
  headline: "Accessible content - form labels, instructions and errors",
  list: false,
  body: "Be very clear about what's expected of a user, and how errors should be resolved. A red asterisk appearing suddenly adjacent to an input isn't helpful to everyone."
}) %>
<%- include(`${part}section`, {
  id: false,
  style: false,
  headline: "Accessible content - beware things that look like text",
  list: false,
  body: "Be on the lookout for images with embedded text, or worse - OCR-resistant PDFs."
}) %>
<%- include(`${part}section`, {
  id: false,
  style: false,
  headline: "Accessible content - ASCII",
  list: false,
  body: [`Think about what this sounds like: ¯\\_(ツ)_/¯.`, `For the same reason, write "16 to 17 years old" instead of "16-17 years old".`]
}) %>
<%- include(`${part}section`, {
  id: false,
  style: false,
  headline: "Accessible content - links",
  list: ["Don't say they're links - the screenreader tells you", "Don't capitalize - screenreaders will read them out letter by letter", "Don't make the link text the url", "Keep links short - screenreaders won't skip them.", "Identify link behaviour - i.e. downloads, new windows, anchor links", "Don't embed link types identifications in your CSS", "Don't abuse javascript to do link-ish things with elements that aren't links (anchors or area tags)", "If an image is inside an anchor tag, it's alt text should refer to the link behaviour, as well as the image's information.", "Empty or broken links are just mean."],
  body: "Via <a href='https://www.sitepoint.com/15-rules-making-accessible-links/' target='_blank'>sitepoint</a>"
}) %>

